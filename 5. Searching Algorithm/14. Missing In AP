//PREPBYTES - https://www.prepbytes.com/panel/mycourses/program-one/dsalgo/week/5/searching/codingAssignment/MISSAP

APPROACH 1: LINEAR SEARCH: O(2N) 
import java.util.*;
  import java.io.*;
  
  public class Main {
    public static void main(String args[]) throws IOException {
      
      Scanner sc=new Scanner(System.in);
      long T=sc.nextLong();
      while(T-->0)
      {
        int N=sc.nextInt();
        long[] arr=new long[N];
        for(int i=0; i<N; i++)
        {
          arr[i] = sc.nextLong();
        }
        long missing = findMissing(arr,N);
        System.out.println(missing);
      }
    }
    static long findMissing(long[] arr, int n)
    {
      long res=0;
      long commonDiff=Integer.MAX_VALUE;
      for(int i=0; i<n-1; i++)
      {
        commonDiff=Math.min(Math.abs(arr[i]-arr[i+1]),commonDiff);
      }
      for(int i=0; i<n-1; i++)
      {
        if((Math.abs(arr[i] - arr[i+1])) != commonDiff)
        {
          res=arr[i]+commonDiff;
        }
        else
        {
          continue;
        }
      }
      return res;
    }
  }
