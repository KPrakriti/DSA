// Leetcode - https://leetcode.com/problems/number-of-good-pairs/

APPROACH 1: Brute: O(N^2)
class Solution {
    public int numIdenticalPairs(int[] nums) {
        int n=nums.length;
        int total_pairs=0;
        for(int i=0; i<n-1; i++)
        {
            for(int j=i+1; j<n; j++)
            {
                if(nums[i]==nums[j])
                {
                    total_pairs++;
                }
            }
        }
        return total_pairs;
    }
}

APPROACH 2: Using frequency array: TC O(N) 
class Solution {
    public int numIdenticalPairs(int[] nums) {
        int n=nums.length;
        int total_pairs=0;
        int[] freq=new int[100];
        for(int i=0; i<n; i++)
        {
            if(freq[nums[i]]!=0)
            {  
                total_pairs+=freq[nums[i]];
            }
            freq[nums[i]]++;
        }
        return total_pairs;
    }
}
