//Leetcode-https://leetcode.com/problems/summary-ranges/
/*
You are given a sorted unique integer array nums.
A range [a,b] is the set of all integers from a to b (inclusive).
Return the smallest sorted list of ranges that cover all the numbers in the array exactly.
That is, each element of nums is covered by exactly one of the ranges, and there is no integer x such that x is in one of the ranges but not in nums.
Each range [a,b] in the list should be output as:

"a->b" if a != b
"a" if a == b

Example 1:

Input: nums = [0,1,2,4,5,7]
Output: ["0->2","4->5","7"]
Explanation: The ranges are:
[0,2] --> "0->2"
[4,5] --> "4->5"
[7,7] --> "7"
*/

/*
ALGORITHM:
1. Declare an ArrayList<String> that will store the result
2. Use a for loop to iterate over the given array
3. Everytime we will store the valid start element from our array
4. use a while loop to trace over the valid elements i.e a[i+1]-a[i]=1 
5. whenevr this validity breaks we use if else condition to check if the stored start element is equal to the last valid element?
   if yes then we add start+"->"+nums[i]
   else we just add start
*/

class Solution {
    public List<String> summaryRanges(int[] nums) {
        int n=nums.length;
        ArrayList<String> list_res=new ArrayList<>();
        for(int i=0; i<n; i++)
        {
            int start=nums[i];
            
            while(i+1<n && nums[i]+1==nums[i+1])
                i++;
            
            if(start != nums[i])
            {
                list_res.add(""+start+"->"+nums[i]);
            }
            else
            {
                list_res.add(""+start);
            }
        }
        return list_res;
    }
}
