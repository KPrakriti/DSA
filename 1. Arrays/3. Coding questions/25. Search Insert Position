//Leetcode-https://leetcode.com/problems/search-insert-position/
/*
Given a sorted array of distinct integers and a target value, 
return the index if the target is found. If not, return the index where it would be if it were inserted in order.
You must write an algorithm with O(log n) runtime complexity.
Example 1:
Input: nums = [1,3,5,6], target = 5
Output: 2
*/

/*
ALGORITHM:
1. We will use Binary Search technique to solve this problem
2. Initialize low=0 and high=n-1
3. Initialize a while loop that will run till low<=high
4. Initialize mid = (low+high)/2
5. Check if nums[mid]==target? if yes then return mid as ans
6. else if nums[mid]> target then we need to decrement the high by mid-1
7. else if nums[mid] < target then low will be incremented by mid+1
8. when we come out of the while loop oue low will contain the desired answer.
*/

class Solution {
    public int searchInsert(int[] nums, int target) {
        int n=nums.length;
        int low=0, high=n-1;
        while(low<=high)
        {
            int mid=(low+high)/2;
            if(nums[mid]==target) return mid;
            else if(nums[mid]>target) high=mid-1;
            else low=mid+1;
        }
        return low;
    }
}
